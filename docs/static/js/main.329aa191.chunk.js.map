{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","components/auth/LoadingScreen.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","googleAuthProvider","GoogleAuthProvider","types","setError","msgError","type","payload","startLoading","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNotes","uid","getDocs","query","collection","notesSnap","notes","forEach","snapChild","push","id","data","activeNote","note","addNewNote","setNotes","startSaveNote","dispatch","getState","auth","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","login","displayName","logout","LoadingScreen","className","style","color","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","startUploading","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","deleteDoc","icon","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","entries","map","Sidebar","getAuth","signOut","newNote","Date","getTime","addDoc","JournalScreen","LoginScreen","loading","ui","email","password","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","startLoginEmailPassword","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isLoggedIn","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.329aa191.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore';\nimport { GoogleAuthProvider } from 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyCcFl2vnYnU3YyQWGQLj5MAeQWTXYc1uqI\",\n    authDomain: \"react-app-cursos-ba949.firebaseapp.com\",\n    projectId: \"react-app-cursos-ba949\",\n    storageBucket: \"react-app-cursos-ba949.appspot.com\",\n    messagingSenderId: \"712927062369\",\n    appId: \"1:712927062369:web:f95bc4946312a495207d20\",\n    measurementId: \"G-21J6G0R0Q3\"\n};\n\ninitializeApp(firebaseConfig);\n\nconst db = getFirestore();\nconst googleAuthProvider = new GoogleAuthProvider();\n\nexport { db, googleAuthProvider };\n","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start Loading',\n    uiFinishLoading: '[UI] Finish Loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Updated note',\n    notesFileUrl: '[Notes] Updated image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout cleaning',\n};\n","import { types } from \"../types/types\";\n\nexport const setError = ( msgError ) => ({\n    type: types.uiSetError,\n    payload: msgError\n})\n\nexport const removeError = () => ({\n    type: types.uiRemoveError,\n})\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading,\n})\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading,\n})","const fileUpload = async ( file ) => {\n    const cloudUrl = `https://api.cloudinary.com/v1_1/de1naugkf/upload`;\n    const formData = new FormData();\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        const resp = await fetch( cloudUrl, {\n            method: 'POST',\n            body: formData\n        } );\n\n        if( resp.ok ){\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await resp.json();\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n    // return url;\n}\n\nexport default fileUpload;","import { collection, getDocs, query } from \"@firebase/firestore\";\nimport { db } from \"../firebase/firebase-config\";\n\nconst loadNotes = async ( uid ) => {\n    const notesSnap = await getDocs( query( collection( db, `${uid}/journal/notes`) ) );\n    const notes = [];\n    \n    notesSnap.forEach( snapChild => {\n        notes.push({\n            id: snapChild.id,\n            ...snapChild.data()\n        });\n    });\n\n    return notes;\n}\n\nexport default loadNotes;","import { addDoc, collection, deleteDoc, doc, updateDoc } from '@firebase/firestore';\nimport { db } from '../firebase/firebase-config';\nimport { types } from '../types/types';\nimport fileUpload from '../helpers/fileUpload';\nimport loadNotes from '../helpers/loadNotes';\nimport Swal from 'sweetalert2';\n\nexport const startNewNote = () => {\n    return async ( dispatch, getState ) => {\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime(),\n        };\n\n        const doc = await addDoc( collection(db, `${uid}/journal/notes`), newNote );\n        // console.log( doc );\n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote) );\n    }\n}\n\nexport const activeNote = ( id, note ) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = ( id, note ) => ({\n    type: types.notesAddNew,\n    payload: { id, ...note }\n})\n\nexport const startLoadingNotes = ( uid ) => {\n    return async ( dispatch ) => {\n        const notes = await loadNotes( uid );\n        dispatch( setNotes(notes) );\n    }\n};\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n      const {uid} = getState().auth;\n   \n      if(!note.url){\n        delete note.url;\n      }\n   \n      const noteToFirestore = {...note};\n      delete noteToFirestore.id;\n      const noteRef = doc(db, `${uid}/journal/notes/${note.id}`);\n      await updateDoc(noteRef,noteToFirestore);\n\n      dispatch( refreshNote( note.id, note ) );\n      Swal.fire('Saved', note.title, 'success');\n    }\n  };\n\n  export const refreshNote = ( id, note ) => ({\n      type: types.notesUpdated,\n      payload: { id, note }\n  });\n\nexport const startUploading = ( file ) => {\n    return async ( dispatch, getState ) => {\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            didOpen: () => {\n                Swal.showLoading();\n            },\n        });\n\n        const { active: note } = getState().notes;\n        const fileUrl = await fileUpload( file );\n        \n        note.url = fileUrl;\n        \n        dispatch( startSaveNote( note ) );\n        dispatch( refreshNote( note.id, note ) );\n    }\n};\n\nexport const startDeleting = ( id ) => {\n    return async ( dispatch, getState ) => {\n        const { uid } = getState().auth;\n\n        const noteRef = doc(db, `${uid}/journal/notes/${id}`);\n        await deleteDoc( noteRef );\n\n        Swal.fire({\n            title: 'Deleting',\n            text: 'Deleting note...',\n            icon: 'error'\n        });\n        dispatch( deleteNote( id ) );\n    }\n};\n\nexport const deleteNote = ( id ) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const cleanNotes = () => ({\n    type: types.notesLogoutCleaning\n});\n","import { getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, signOut } from 'firebase/auth';\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\nimport { types } from \"../types/types\"\nimport { finishLoading, startLoading } from './ui';\nimport { cleanNotes } from '../actions/notes';\nimport Swal from 'sweetalert2';\n\nexport const startLoginEmailPassword = ( email, password ) => {\n    return (dispatch) => {\n        const auth = getAuth();\n        dispatch( startLoading() );\n        signInWithEmailAndPassword( auth, email, password )\n            .then( ({user}) => {\n                dispatch( login( user.uid, user.displayName ));\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                // console.log(e);\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            });\n        /* dispatch( startLoading() );\n        setTimeout(() => {\n            dispatch( login(123, 'Pedro') );\n            dispatch( finishLoading() );\n        }, 3500); */\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\n    return ( dispatch ) => {\n        const auth = getAuth();\n        dispatch( startLoading() );\n        createUserWithEmailAndPassword( auth, email, password )\n            .then( async ({user}) => {\n                await updateProfile( user, { displayName: name });\n                dispatch( login(user.uid, user.displayName) );\n                dispatch( finishLoading() );\n            })\n            .catch( e => {\n                // console.log(e);\n                dispatch( finishLoading() );\n                Swal.fire('Error', e.message, 'error');\n            });\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        const auth = getAuth();\n        signInWithPopup( auth, googleAuthProvider ).then( ({ user }) => {\n            dispatch(\n                login( user.uid, user.displayName )\n            );\n        });\n    }\n}\n\nexport const login = ( uid, displayName ) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName,\n    }\n});\n\nexport const startLogout = () => {\n    return ( async (dispatch) => {\n        const auth = getAuth();\n        signOut(auth);\n        dispatch( logout() );\n        dispatch( cleanNotes() );\n    });\n}\n\nexport const logout = () => ({\n    type: types.logout\n})\n","import React from 'react'\n\nexport const LoadingScreen = () => {\n    return (\n        <div className=\"auth__main\">\n            <h1 className=\"auth__title\" style={{ color: \"white\" }}>Loading...</h1>\n        </div>\n    )\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active: note } = useSelector( state => state.notes );\n\n    const handleSave = () => {\n        dispatch( startSaveNote(note) );\n    }\n\n    const handlePicture = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = ( e ) => {\n        const file = e.target.files[0];\n        if (file){\n            dispatch( startUploading( file ) );\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>November 1st, 2021</span>\n            <input id=\"fileSelector\" type=\"file\" name=\"file\" style={{ display: \"none\" }} onChange={ handleFileChange } />\n            <div>\n                <button className=\"btn\" onClick={ handlePicture }>Picture</button>\n                <button className=\"btn\" onClick={ handleSave }>Save</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    const { active: note } = useSelector( state => state.notes );\n    const [ values, handleInputChange, reset ] = useForm( note );\n    const { title, body } = values;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        if ( note.id !== activeId.current ){\n            reset( note );\n            activeId.current = note.id;\n        }\n    }, [ note, reset ]);\n\n    useEffect(() => {\n        dispatch( activeNote( values.id, { ...values } ));\n    }, [ values, dispatch ]);\n\n    const handleDelete = () => {\n        dispatch( startDeleting( note.id ) );\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n            <div className=\"notes__content\">\n                <input type=\"text\" placeholder=\"Some awesome title\" className=\"notes__title-input\" autoComplete=\"off\" name=\"title\" value={ title } onChange={ handleInputChange }/>\n                <textarea placeholder=\"What happened today\" className=\"notes__textarea\" name=\"body\" value={ body } onChange={ handleInputChange }></textarea>\n                {\n                    note.url &&\n                        <div className=\"notes__image\">\n                            <img\n                                src={ note.url }\n                                alt={ note.title }\n                            />\n                        </div>\n                }\n            </div>\n            <button className=\"btn btn-danger\" onClick={ handleDelete }>Delete</button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>Select something <br/> or create an entry</p>\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, title, body, url, date }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleClickedEntry = () => {\n        const note = {\n            id,\n            title,\n            body,\n            url,\n            date\n        };\n\n        dispatch( activeNote( id, note ) );\n    }\n\n    return (\n        <div className=\"journal__entry animate__animated animate__fadeIn animate__faster\" onClick={ handleClickedEntry }>\n            {\n                url &&\n                    <div\n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url(${url})`\n                        }}\n                    ></div>\n            }\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {/* Un nuevo dia */}\n                    { title }\n                </p>\n                <p className=\"journal__entry-content\">\n                    {/* Sit duis fugiat aute ex. Culpa eiusmod elit commodo esse commodo cillum. */}\n                    { body }\n                </p>\n            </div>\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('DD') }</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    // const entries = [1, 2, 3, 4, 5, 6, 7, 8, 9, 19];\n    const { notes: entries } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__entries\">\n            {\n                entries.map( note => (\n                    <JournalEntry key={ note.id } { ...note } />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n    const { name } = useSelector( state => state.auth );\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name }</span>\n                </h3>\n                <button className=\"btn\" onClick={ handleLogout }>Logout</button>\n            </div>\n            <div className=\"journal__new-entry\" onClick={ handleAddNew }>\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">New entry</p>\n            </div>\n            <JournalEntries />\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector( state => state.notes );\n\n    return (\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\n            <Sidebar />\n            <main>\n                {\n                    ( active )\n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected /> )\n                }\n            </main>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\nimport { useForm } from '../../hooks/useForm'\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector( state => state.ui.loading );\n\n    const [ values, handleInputChange ] = useForm({\n        email: 'mariomart2001@gmail.com',\n        password: '123456'\n    });\n\n    const { email, password } = values;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        \n        dispatch( startLoginEmailPassword( email, password ) );\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( startGoogleLogin() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\n                <input className=\"auth__input\" type=\"text\" placeholder=\"Email\" name=\"email\" autoComplete=\"off\" value={ email } onChange={ handleInputChange } />\n                <input className=\"auth__input\" type=\"password\" placeholder=\"Password\" name=\"password\" value={ password } onChange={ handleInputChange } />\n                <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={ loading }>Login</button>\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div className=\"btn google-btn\" onClick={ handleGoogleLogin }>\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link to=\"/auth/register\" className=\"link\">\n                    Create new account\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm'\nimport { removeError, setError } from '../../actions/ui';\n\nexport const RegisterScreen = () => {\n    const dispatch = useDispatch();\n    const msgError = useSelector(state => state.ui.msgError);\n\n    const [ values, handleInputChange ] = useForm({\n        name: 'Mario',\n        email: 'mariomart2001@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = values;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if ( isFormValid() ){\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\n        }\n    }\n\n    const isFormValid = () => {\n        if ( name.trim().length === 0 ) {\n            dispatch( setError('Name is required') );\n            return false;\n        } else if ( !validator.isEmail(email) ){\n            dispatch( setError('Email is not valid') );\n            return false;\n        } else if ( password !== password2 || password.length < 5 ){\n            dispatch( setError('Password should be at least 6 characters and match') );\n            return false;\n        }\n\n        dispatch( removeError() );\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n            <form onSubmit={ handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\n                {   \n                    msgError &&\n                    ( <div className=\"auth__alert-error\">{ msgError }</div> )\n                }\n                <input className=\"auth__input\" type=\"text\" placeholder=\"Name\" name=\"name\" autoComplete=\"off\" onChange={ handleInputChange } value={ name } />\n                <input className=\"auth__input\" type=\"text\" placeholder=\"Email\" name=\"email\" autoComplete=\"off\" onChange={ handleInputChange } value={ email } />\n                <input className=\"auth__input\" type=\"password\" placeholder=\"Password\" name=\"password\" onChange={ handleInputChange } value={ password } />\n                <input className=\"auth__input\" type=\"password\" placeholder=\"Confirm password\" name=\"password2\" onChange={ handleInputChange } value={ password2 } />\n                <button className=\"btn btn-primary btn-block mb-5\" type=\"submit\">Register</button>\n                <Link to=\"/auth/login\" className=\"link mt-5\">\n                    Already registered?\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\n                    <Route path=\"/auth/register\" component={ RegisterScreen } />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({ \n        isLoggedIn,\n        component: Component,\n        ...rest\n    }) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isLoggedIn )\n                    ? <Component { ...props } />\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired    \n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({ \n        isLoggedIn,\n        component: Component,\n        ...rest\n    }) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isLoggedIn )\n                    ? <Component { ...props } />\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired    \n}\n","import { getAuth, onAuthStateChanged } from '@firebase/auth'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport { login } from '../actions/auth'\nimport { LoadingScreen } from '../components/auth/LoadingScreen'\nimport { JournalScreen } from '../components/journal/JournalScreen'\nimport { AuthRouter } from './AuthRouter'\nimport { PublicRoute } from './PublicRoute'\nimport { PrivateRoute } from './PrivateRoute'\nimport { startLoadingNotes } from '../actions/notes'\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const auth = getAuth();\n        onAuthStateChanged( auth, (user) => {\n            if( user?.uid ){\n                dispatch( login( user.uid, user.displayName ) );\n                setIsLoggedIn(true);\n                dispatch(startLoadingNotes( user.uid ));\n            } else {\n                setIsLoggedIn(false);\n            }\n            setChecking(false);\n        });\n    }, [dispatch, setChecking, setIsLoggedIn]);\n\n    if ( checking ){\n        return <LoadingScreen />\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute path=\"/auth\" component={ AuthRouter } isLoggedIn={ isLoggedIn } />\n                    <PrivateRoute exact path=\"/\" component={ JournalScreen } isLoggedIn={ isLoggedIn } />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null,\n};\n\nexport const uiReducer = ( state = initialState, action ) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload,\n            };\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null,\n            };\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true,\n            };\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}","// import { types } from \"../types/types\";\n\nimport { types } from \"../types/types\";\n\n/*\n    {\n        notes: [],\n        active: null,\n        active: {\n            id: 'providedByFirebase'',\n            title: '',\n            body: '',\n            imgUrl: '',\n            date: 11302021\n        }\n    }\n*/\n\nconst initialState = {\n    notes: [],\n    active: null,\n};\n\nexport const notesReducer = ( state = initialState, action ) => {\n    switch (action.type) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [ ...state.notes, action.payload ]\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map( note => note.id === action.payload.id ? action.payload.note : note )\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n        default:\n            return state;\n    }\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import { types } from \"../types/types\";\n\n/*\n * \n * @param {*} state \n * @param {*} action \n * \n * {\n *      uid: 8642,\n *      name: 'Josue'\n * }\n */\n\nexport const authReducer = ( state = {}, action ) => {\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            };\n        case types.logout:\n            return { };\n        default:\n            return state;\n    }\n}","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { AppRouter } from './routers/AppRouter'\nimport { store } from './store/store'\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}